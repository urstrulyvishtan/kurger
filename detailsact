java
package com.android.kurger;

import androidx.annotation.NonNull;
import androidx.appcompat.app.AppCompatActivity;

import android.Manifest;
import android.content.pm.PackageManager;
import android.os.Build;
import android.os.Bundle;
import android.os.Environment;
import android.view.View;
import android.widget.Button;
import android.widget.EditText;
import android.widget.Toast;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileWriter;
import java.text.SimpleDateFormat;
import java.util.Locale;

public class detailsact extends AppCompatActivity {
    EditText minput,mtimes,mdates;
    Button save;
    String name,times,dates;
    private static final int WRITE_EXTERNAL_STORAGE_CODE =1;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_detailsact);

        minput=findViewById(R.id.namef);
        mtimes=findViewById(R.id.timef);
        mdates=findViewById(R.id.datef);
        save=findViewById(R.id.create);

        save.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                name=minput.getText().toString().trim();
                times=mtimes.getText().toString().trim();
                dates=mdates.getText().toString().trim();
                if(name.isEmpty()){
                    Toast.makeText(detailsact.this,"please enter name of event",Toast.LENGTH_SHORT).show();
                    if(times.isEmpty()){
                        Toast.makeText(detailsact.this,"enter the time of event",Toast.LENGTH_SHORT).show();
                    }
                    if(dates.isEmpty()){
                        Toast.makeText(detailsact.this,"please enter date of event",Toast.LENGTH_SHORT).show();
                    }

                }
                else
                {
                    if (Build.VERSION.SDK_INT>=Build.VERSION_CODES.M){
                        if (checkSelfPermission(Manifest.permission.WRITE_EXTERNAL_STORAGE)== PackageManager.PERMISSION_DENIED){
                            String[] permissions={Manifest.permission.WRITE_EXTERNAL_STORAGE};
                            requestPermissions(permissions,WRITE_EXTERNAL_STORAGE_CODE);
                        }
                        else{
                            saveToTxtFile(name,times,dates);
                        }
                    }
                    else
                    {
                        saveToTxtFile(name,times,dates);
                    }
                }
            }
        });
    }

    @Override
    public void onRequestPermissionsResult(int requestCode, @NonNull String[] permissions, @NonNull int[] grantResults) {
        switch (requestCode){
            case WRITE_EXTERNAL_STORAGE_CODE:{
                if (grantResults.length>0 && grantResults[0]
                    == PackageManager.PERMISSION_GRANTED){
                    saveToTxtFile(name,times,dates);
                }
                else
                {
                    Toast.makeText(this,"storage permissions are not given",Toast.LENGTH_SHORT).show();
                }
            }
        }
    }

    private void saveToTxtFile(String name,String times,String dates) {
        String timeStamp=new SimpleDateFormat("yyyyMMdd_HHmmss", Locale.getDefault()).format(System.currentTimeMillis());
        try
        {
            File path= Environment.getExternalStorageDirectory();
            File dir=new File(path+"/kurger");
            dir.mkdirs();
            String fileName="event"+timeStamp+".txt";

            File file=new File(dir,fileName);
            FileWriter fw=new FileWriter(file.getAbsoluteFile());
            BufferedWriter bw=new BufferedWriter(fw);
            BufferedWriter sw=new BufferedWriter(fw);
            sw.write(times);
            sw.close();
            bw.write(name);
            bw.close();
            BufferedWriter dw=new BufferedWriter(fw);
            dw.write(dates);
            dw.close();


            Toast.makeText(this,fileName="is saved",Toast.LENGTH_SHORT).show();
        }
        catch (Exception e){
            Toast.makeText(this,e.getMessage(),Toast.LENGTH_SHORT).show();
        }
    }
}




XML
<?xml version="1.0" encoding="utf-8"?>
<androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    tools:context=".detailsact">

    <TextView
        android:id="@+id/head3"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="Event details"
        android:textAppearance="@style/TextAppearance.AppCompat.Display1"
        app:layout_constraintBottom_toBottomOf="parent"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintHorizontal_bias="0.073"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toTopOf="parent"
        app:layout_constraintVertical_bias="0.116" />

    <EditText
        android:id="@+id/namef"
        android:layout_width="304dp"
        android:layout_height="51dp"
        android:ems="10"
        android:hint="Name of event"
        android:inputType="textPersonName"
        app:layout_constraintBottom_toBottomOf="parent"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintHorizontal_bias="0.08"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toTopOf="parent"
        app:layout_constraintVertical_bias="0.285" />

    <EditText
        android:id="@+id/timef"
        android:layout_width="306dp"
        android:layout_height="53dp"
        android:ems="10"
        android:hint="Time of event"
        android:inputType="time"
        app:layout_constraintBottom_toBottomOf="parent"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintHorizontal_bias="0.08"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toTopOf="parent"
        app:layout_constraintVertical_bias="0.387" />

    <EditText
        android:id="@+id/datef"
        android:layout_width="305dp"
        android:layout_height="55dp"
        android:ems="10"
        android:hint="Date of event"
        android:inputType="date"
        app:layout_constraintBottom_toBottomOf="parent"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintHorizontal_bias="0.08"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toTopOf="parent" />

    <Button
        android:id="@+id/create"
        android:layout_width="117dp"
        android:layout_height="46dp"
        android:text="create"
        app:layout_constraintBottom_toBottomOf="parent"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintHorizontal_bias="0.054"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toTopOf="parent"
        app:layout_constraintVertical_bias="0.813" />

</androidx.constraintlayout.widget.ConstraintLayout>
